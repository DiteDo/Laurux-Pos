' Gambas module file

Private Soc As String
Private Tab As String
Private Tab1 As String
Private intitule As String
Private Hfile As File
Private Lig As String
Private code As String = ""
Private TabSoc As String
Private SocResult As Result
Private rResult As Result
Private r2Result As Result
Private bMaj As Boolean = False

Public Sub Verif_Version()

  
  Dim pos_version As String
  Dim pos_versionArr As String[]
  
  TabSoc = "Fiches_Societes"
  SocResult = Utils.db.Exec("SELECT * from  " & TabSoc & "")
  If SocResult.Available Then Soc = SocResult!cd_sc
  
  pos_version = Start.LocalSettings["/dbase/Version"]
  pos_version = Replace(pos_version, "Laurux.Pos ", "")
  pos_version = Replace(pos_version, Application.Name & " ", "")
  pos_version = Replace(pos_version, "V", "")
  pos_version = Replace(pos_version, "v", "")
  pos_versionArr = Split(pos_version, ".")
  pos_version = pos_versionArr[0] & "." & pos_versionArr[1]
  
  rResult = Utils.db.Exec("SELECT * from  Fiches_Parametres")
  If Not rResult.Available Or IsNull(rResult!version_pos)
    Message.Error("Base de données incompatible avec " & Application.Name)
    Quit
  Endif
  'On verifie d'abord la compatibilité de la caisse avec la base de données
  If (rResult!version_pos <> (Split(Application.Version, ".")[0] & "." & Split(Application.Version, ".")[1])) Then
    Message.Error("Attention la version de la base de donnée " & rResult!version_pos & "\nest incompatible avec la version " & Application.Version & " de " & Application.Name)
    Return
  Endif

  '************************* Maj 3.25 *********************
  rResult = Utils.db.Exec("SELECT * from  Fiches_Parametres")
  If rResult!version_pos <> pos_version 
    'If Start.LocalSettings["/dbase/Maj"] Then
      Maj325()
      Start.LocalSettings["/dbase/Version"] = (Split(Application.Version, ".")[0] & "." & Split(Application.Version, ".")[1])
      Start.LocalSettings.Save
      Start.LocalSettings.Reload
    'Endif
  Endif

  If bMaj Then Shell "xdg-open 'http://www.laurux.fr/drupal/changelog'"

End


Public Sub Maj325()

  Dim newsettings As String
  Dim key As Variant
  Dim hObject As Object
   

  If Exist(User.Home & "/.config/gambas3/Laurux.Pos.conf")
    If Not Exist(User.Home & "/.config/gambas3/" & Application.Name & ".conf")
      Move User.Home & "/.config/gambas3/Laurux.Pos.conf" To User.Home & "/.config/gambas3/" & Application.Name & ".conf"
      newsettings = File.Load(User.Home & "/.config/gambas3/" & Application.Name & ".conf")
      newsettings = Replace$(newsettings, "BackColor", "Background")
      newsettings = Replace$(newsettings, "ForeColor", "Foreground")
      newsettings = Replace$(newsettings, "Backcolor", "Background")
      newsettings = Replace$(newsettings, "Forecolor", "Foreground")
      newsettings = Replace$(newsettings, "backColor", "Background")
      newsettings = Replace$(newsettings, "foreColor", "Foreground")
      File.Save(User.Home & "/.config/gambas3/" & Application.Name & ".conf", newsettings)
      Start.LocalSettings.Reload
    Else
      If Message.Warning("Warning Maj325 n'a pas déplacé les fichiers de conf, car la source et la destination existent!\nVeuillez verifier les configurations!\n source: " & User.Home & "/.config/gambas3/Laurux.Pos.conf\n destination: " & User.Home & "/.config/gambas3/" & Application.Name & ".conf\n\nSouhaitez-vous tenter une récupération de votre ancienne configuration", "Oui", "Non") == 1 Then
        newsettings = File.Load(User.Home & "/.config/gambas3/Laurux.Pos.conf")
        newsettings = Replace$(newsettings, "BackColor", "Background")
        newsettings = Replace$(newsettings, "ForeColor", "Foreground")
        newsettings = Replace$(newsettings, "Backcolor", "Background")
        newsettings = Replace$(newsettings, "Forecolor", "Foreground")
        newsettings = Replace$(newsettings, "backColor", "Background")
        newsettings = Replace$(newsettings, "foreColor", "Foreground")
        File.Save(User.Home & "/.config/gambas3/" & Application.Name & ".conf", newsettings)
        Kill User.Home & "/.config/gambas3/Laurux.Pos.conf"
        Start.LocalSettings.Reload
      Endif
    Endif
  Else
    newsettings = File.Load(User.Home & "/.config/gambas3/" & Application.Name & ".conf")
    newsettings = Replace$(newsettings, "BackColor", "Background")
    newsettings = Replace$(newsettings, "ForeColor", "Foreground")
    newsettings = Replace$(newsettings, "Backcolor", "Background")
    newsettings = Replace$(newsettings, "Forecolor", "Foreground")
    newsettings = Replace$(newsettings, "backColor", "Background")
    newsettings = Replace$(newsettings, "foreColor", "Foreground")
    File.Save(User.Home & "/.config/gambas3/" & Application.Name & ".conf", newsettings)
    Start.LocalSettings.Reload
  Endif
  
  If Not Error Then bmaj = True

End
